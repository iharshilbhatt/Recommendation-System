# -*- coding: utf-8 -*-
"""Recommendation System.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CTag234DQkQNaJrtjdnJVXCSdSlsoP-t
"""

import pandas as pd

data=pd.read_csv("/content/content based filtering.csv")

data

data.info()

data.dropna(subset=['cast','title','listed_in','description'],axis=0 ,inplace=True) #axis=0 column and 1 = row
data=data.reset_index(drop=True)

data["combined"] = data['cast']+" " +data['title']+" "+data['listed_in']+" "+data['description']

data

data.drop(['listed_in', 'cast', 'description'], axis=1, inplace=True)

data

#TFIDF
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.metrics.pairwise import linear_kernel

vectorizer=TfidfVectorizer()
matrix=vectorizer.fit_transform(data['combined'])

matrix

cosine_similarity=linear_kernel(matrix,matrix)
movie_title=data['title']
indices=pd.Series(data.index,index=data['title'])

indices

cosine_similarity.shape

def content_filtering(title):
  index=indices[title]
  similarity_Scores=list(enumerate(cosine_similarity[index]))
  similarity_Scores=sorted(similarity_Scores,key=lambda x:x[1], reverse=True)
  movie_indices=[i[0] for i in similarity_Scores[1:26]]
  return movie_title.iloc[movie_indices]

content_filtering('Friends')

content_filtering('PK')

"""COllabrative Filtering Recommendation System"""

pip install scikit-surprise

import numpy as np
import pandas as pd
from surprise import SVD,KNNBasic,NMF #Bas Functionalities of algorithm
from surprise import Dataset, Reader
from surprise.model_selection import cross_validate

users=[1,1,2,2,3,3,4,4]
movies=["HP", "Gol", "HP", "Dh", "HP", "Gol", "Dh", "Gol" ]
ratings=[4,5,1,2,3,4,3,4]
ratings_dict={'userID':users,'ItemID':movies,'rating':ratings}
df=pd.DataFrame(ratings_dict)

df

reader=Reader(rating_scale=(1,5))
data=Dataset.load_from_df(df[['userID','ItemID','rating']],reader)

data

#SVD algorithm
algo=SVD()

cross_validate(algo,data,measures=["rmse", "mae"],cv=5,verbose=True)

algo.predict(1,'Dh')

algo.predict(2,'Gol')

algo.predict(3,'Dh')

algo.predict(4,'HP')